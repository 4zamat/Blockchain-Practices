{
	"id": "b1c2142856e70fb21e1cb837becef133",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol": {
				"content": "// Task 3\r\n\r\n// Write a contract that contains one function\r\n\r\n// This function takes three integer arguments a, b and c\r\n// and returns true if\r\n// a is either greater than b and c\r\n// or if a is greater than c and less than b\r\n// otherwise, the function returns false\r\n\r\npragma solidity ^0.8.15;\r\n\r\ncontract Comparition {\r\n    function compare(int256 a, int256 b, int256 c) public pure returns (bool) {\r\n        if (a > b && a > c) {\r\n            return true;\r\n        } else if (a > c && a < b) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol": {
				"Comparition": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "a",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "b",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "c",
									"type": "int256"
								}
							],
							"name": "compare",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":301:591  contract Comparition {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":301:591  contract Comparition {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x69c3274b\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":329:588  function compare(int256 a, int256 b, int256 c) public pure returns (bool) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":397:401  bool */\n      0x00\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":422:423  b */\n      dup3\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":418:419  a */\n      dup5\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":418:423  a > b */\n      sgt\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":418:432  a > b && a > c */\n      dup1\n      iszero\n      tag_11\n      jumpi\n      pop\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":431:432  c */\n      dup2\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":427:428  a */\n      dup5\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":427:432  a > c */\n      sgt\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":418:432  a > b && a > c */\n    tag_11:\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":414:581  if (a > b && a > c) {... */\n      iszero\n      tag_12\n      jumpi\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":456:460  true */\n      0x01\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":449:460  return true */\n      swap1\n      pop\n      jump(tag_10)\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":414:581  if (a > b && a > c) {... */\n    tag_12:\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":486:487  c */\n      dup2\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":482:483  a */\n      dup5\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":482:487  a > c */\n      sgt\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":482:496  a > c && a < b */\n      dup1\n      iszero\n      tag_14\n      jumpi\n      pop\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":495:496  b */\n      dup3\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":491:492  a */\n      dup5\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":491:496  a < b */\n      slt\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":482:496  a > c && a < b */\n    tag_14:\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":478:581  if (a > c && a < b) {... */\n      iszero\n      tag_15\n      jumpi\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":520:524  true */\n      0x01\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":513:524  return true */\n      swap1\n      pop\n      jump(tag_10)\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":478:581  if (a > c && a < b) {... */\n    tag_15:\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":564:569  false */\n      0x00\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":557:569  return false */\n      swap1\n      pop\n        /* \"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":329:588  function compare(int256 a, int256 b, int256 c) public pure returns (bool) {... */\n    tag_10:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_18:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:410   */\n    tag_20:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":399:404   */\n      dup2\n        /* \"#utility.yul\":388:404   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":416:536   */\n    tag_21:\n        /* \"#utility.yul\":488:511   */\n      tag_31\n        /* \"#utility.yul\":505:510   */\n      dup2\n        /* \"#utility.yul\":488:511   */\n      tag_20\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":481:486   */\n      dup2\n        /* \"#utility.yul\":478:512   */\n      eq\n        /* \"#utility.yul\":468:530   */\n      tag_32\n      jumpi\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":523:524   */\n      dup1\n        /* \"#utility.yul\":516:528   */\n      revert\n        /* \"#utility.yul\":468:530   */\n    tag_32:\n        /* \"#utility.yul\":416:536   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":542:679   */\n    tag_22:\n        /* \"#utility.yul\":587:592   */\n      0x00\n        /* \"#utility.yul\":625:631   */\n      dup2\n        /* \"#utility.yul\":612:632   */\n      calldataload\n        /* \"#utility.yul\":603:632   */\n      swap1\n      pop\n        /* \"#utility.yul\":641:673   */\n      tag_34\n        /* \"#utility.yul\":667:672   */\n      dup2\n        /* \"#utility.yul\":641:673   */\n      tag_21\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":542:679   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":685:1298   */\n    tag_6:\n        /* \"#utility.yul\":759:765   */\n      0x00\n        /* \"#utility.yul\":767:773   */\n      dup1\n        /* \"#utility.yul\":775:781   */\n      0x00\n        /* \"#utility.yul\":824:826   */\n      0x60\n        /* \"#utility.yul\":812:821   */\n      dup5\n        /* \"#utility.yul\":803:810   */\n      dup7\n        /* \"#utility.yul\":799:822   */\n      sub\n        /* \"#utility.yul\":795:827   */\n      slt\n        /* \"#utility.yul\":792:911   */\n      iszero\n      tag_36\n      jumpi\n        /* \"#utility.yul\":830:909   */\n      tag_37\n      tag_18\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":792:911   */\n    tag_36:\n        /* \"#utility.yul\":950:951   */\n      0x00\n        /* \"#utility.yul\":975:1027   */\n      tag_38\n        /* \"#utility.yul\":1019:1026   */\n      dup7\n        /* \"#utility.yul\":1010:1016   */\n      dup3\n        /* \"#utility.yul\":999:1008   */\n      dup8\n        /* \"#utility.yul\":995:1017   */\n      add\n        /* \"#utility.yul\":975:1027   */\n      tag_22\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":965:1027   */\n      swap4\n      pop\n        /* \"#utility.yul\":921:1037   */\n      pop\n        /* \"#utility.yul\":1076:1078   */\n      0x20\n        /* \"#utility.yul\":1102:1154   */\n      tag_39\n        /* \"#utility.yul\":1146:1153   */\n      dup7\n        /* \"#utility.yul\":1137:1143   */\n      dup3\n        /* \"#utility.yul\":1126:1135   */\n      dup8\n        /* \"#utility.yul\":1122:1144   */\n      add\n        /* \"#utility.yul\":1102:1154   */\n      tag_22\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1092:1154   */\n      swap3\n      pop\n        /* \"#utility.yul\":1047:1164   */\n      pop\n        /* \"#utility.yul\":1203:1205   */\n      0x40\n        /* \"#utility.yul\":1229:1281   */\n      tag_40\n        /* \"#utility.yul\":1273:1280   */\n      dup7\n        /* \"#utility.yul\":1264:1270   */\n      dup3\n        /* \"#utility.yul\":1253:1262   */\n      dup8\n        /* \"#utility.yul\":1249:1271   */\n      add\n        /* \"#utility.yul\":1229:1281   */\n      tag_22\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":1219:1281   */\n      swap2\n      pop\n        /* \"#utility.yul\":1174:1291   */\n      pop\n        /* \"#utility.yul\":685:1298   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1304:1394   */\n    tag_23:\n        /* \"#utility.yul\":1338:1345   */\n      0x00\n        /* \"#utility.yul\":1381:1386   */\n      dup2\n        /* \"#utility.yul\":1374:1387   */\n      iszero\n        /* \"#utility.yul\":1367:1388   */\n      iszero\n        /* \"#utility.yul\":1356:1388   */\n      swap1\n      pop\n        /* \"#utility.yul\":1304:1394   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1400:1509   */\n    tag_24:\n        /* \"#utility.yul\":1481:1502   */\n      tag_43\n        /* \"#utility.yul\":1496:1501   */\n      dup2\n        /* \"#utility.yul\":1481:1502   */\n      tag_23\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1476:1479   */\n      dup3\n        /* \"#utility.yul\":1469:1503   */\n      mstore\n        /* \"#utility.yul\":1400:1509   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1515:1725   */\n    tag_9:\n        /* \"#utility.yul\":1602:1606   */\n      0x00\n        /* \"#utility.yul\":1640:1642   */\n      0x20\n        /* \"#utility.yul\":1629:1638   */\n      dup3\n        /* \"#utility.yul\":1625:1643   */\n      add\n        /* \"#utility.yul\":1617:1643   */\n      swap1\n      pop\n        /* \"#utility.yul\":1653:1718   */\n      tag_45\n        /* \"#utility.yul\":1715:1716   */\n      0x00\n        /* \"#utility.yul\":1704:1713   */\n      dup4\n        /* \"#utility.yul\":1700:1717   */\n      add\n        /* \"#utility.yul\":1691:1697   */\n      dup5\n        /* \"#utility.yul\":1653:1718   */\n      tag_24\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1515:1725   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e58f9e4e97bbe9c31d997639acdfa548610a9dff8ed356fea978a427a7586fde64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506101918061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c806369c3274b1461002d575b5f80fd5b610047600480360381019061004291906100d8565b61005d565b6040516100549190610142565b60405180910390f35b5f828413801561006c57508184135b1561007a576001905061009a565b818413801561008857508284125b15610096576001905061009a565b5f90505b9392505050565b5f80fd5b5f819050919050565b6100b7816100a5565b81146100c1575f80fd5b50565b5f813590506100d2816100ae565b92915050565b5f805f606084860312156100ef576100ee6100a1565b5b5f6100fc868287016100c4565b935050602061010d868287016100c4565b925050604061011e868287016100c4565b9150509250925092565b5f8115159050919050565b61013c81610128565b82525050565b5f6020820190506101555f830184610133565b9291505056fea2646970667358221220e58f9e4e97bbe9c31d997639acdfa548610a9dff8ed356fea978a427a7586fde64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69C3274B EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP3 DUP5 SGT DUP1 ISZERO PUSH2 0x6C JUMPI POP DUP2 DUP5 SGT JUMPDEST ISZERO PUSH2 0x7A JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x9A JUMP JUMPDEST DUP2 DUP5 SGT DUP1 ISZERO PUSH2 0x88 JUMPI POP DUP3 DUP5 SLT JUMPDEST ISZERO PUSH2 0x96 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x9A JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7 DUP2 PUSH2 0xA5 JUMP JUMPDEST DUP2 EQ PUSH2 0xC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD2 DUP2 PUSH2 0xAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEF JUMPI PUSH2 0xEE PUSH2 0xA1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFC DUP7 DUP3 DUP8 ADD PUSH2 0xC4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10D DUP7 DUP3 DUP8 ADD PUSH2 0xC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x11E DUP7 DUP3 DUP8 ADD PUSH2 0xC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13C DUP2 PUSH2 0x128 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x155 PUSH0 DUP4 ADD DUP5 PUSH2 0x133 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 DUP16 SWAP15 0x4E SWAP8 0xBB 0xE9 0xC3 SAR SWAP10 PUSH23 0x39ACDFA548610A9DFF8ED356FEA978A427A7586FDE6473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "301:290:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@compare_38": {
									"entryPoint": 93,
									"id": 38,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_int256": {
									"entryPoint": 196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int256t_int256t_int256": {
									"entryPoint": 216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 161,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1728:1",
										"nodeType": "YulBlock",
										"src": "0:1728:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "378:32:1",
													"nodeType": "YulBlock",
													"src": "378:32:1",
													"statements": [
														{
															"nativeSrc": "388:16:1",
															"nodeType": "YulAssignment",
															"src": "388:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "399:5:1",
																"nodeType": "YulIdentifier",
																"src": "399:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "334:76:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:1",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:1",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:76:1"
											},
											{
												"body": {
													"nativeSrc": "458:78:1",
													"nodeType": "YulBlock",
													"src": "458:78:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "514:16:1",
																"nodeType": "YulBlock",
																"src": "514:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "523:1:1",
																					"nodeType": "YulLiteral",
																					"src": "523:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "516:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			},
																			"nativeSrc": "516:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "516:12:1"
																		},
																		"nativeSrc": "516:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "516:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "481:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "481:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "505:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "505:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "488:16:1",
																					"nodeType": "YulIdentifier",
																					"src": "488:16:1"
																				},
																				"nativeSrc": "488:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "488:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "478:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "478:2:1"
																		},
																		"nativeSrc": "478:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "478:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "471:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "471:6:1"
																},
																"nativeSrc": "471:42:1",
																"nodeType": "YulFunctionCall",
																"src": "471:42:1"
															},
															"nativeSrc": "468:62:1",
															"nodeType": "YulIf",
															"src": "468:62:1"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "416:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "451:5:1",
														"nodeType": "YulTypedName",
														"src": "451:5:1",
														"type": ""
													}
												],
												"src": "416:120:1"
											},
											{
												"body": {
													"nativeSrc": "593:86:1",
													"nodeType": "YulBlock",
													"src": "593:86:1",
													"statements": [
														{
															"nativeSrc": "603:29:1",
															"nodeType": "YulAssignment",
															"src": "603:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "625:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "625:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "612:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "612:12:1"
																},
																"nativeSrc": "612:20:1",
																"nodeType": "YulFunctionCall",
																"src": "612:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "603:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "603:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "667:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "667:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "641:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "641:25:1"
																},
																"nativeSrc": "641:32:1",
																"nodeType": "YulFunctionCall",
																"src": "641:32:1"
															},
															"nativeSrc": "641:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "641:32:1"
														}
													]
												},
												"name": "abi_decode_t_int256",
												"nativeSrc": "542:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "571:6:1",
														"nodeType": "YulTypedName",
														"src": "571:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "579:3:1",
														"nodeType": "YulTypedName",
														"src": "579:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "587:5:1",
														"nodeType": "YulTypedName",
														"src": "587:5:1",
														"type": ""
													}
												],
												"src": "542:137:1"
											},
											{
												"body": {
													"nativeSrc": "782:516:1",
													"nodeType": "YulBlock",
													"src": "782:516:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "828:83:1",
																"nodeType": "YulBlock",
																"src": "828:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "830:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "830:77:1"
																			},
																			"nativeSrc": "830:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "830:79:1"
																		},
																		"nativeSrc": "830:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "830:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "803:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "803:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "812:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "812:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "799:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "799:3:1"
																		},
																		"nativeSrc": "799:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "799:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "824:2:1",
																		"nodeType": "YulLiteral",
																		"src": "824:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "795:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "795:3:1"
																},
																"nativeSrc": "795:32:1",
																"nodeType": "YulFunctionCall",
																"src": "795:32:1"
															},
															"nativeSrc": "792:119:1",
															"nodeType": "YulIf",
															"src": "792:119:1"
														},
														{
															"nativeSrc": "921:116:1",
															"nodeType": "YulBlock",
															"src": "921:116:1",
															"statements": [
																{
																	"nativeSrc": "936:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "936:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "950:1:1",
																		"nodeType": "YulLiteral",
																		"src": "950:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "940:6:1",
																			"nodeType": "YulTypedName",
																			"src": "940:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "965:62:1",
																	"nodeType": "YulAssignment",
																	"src": "965:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "999:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "999:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1010:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1010:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "995:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "995:3:1"
																				},
																				"nativeSrc": "995:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "995:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1019:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nativeSrc": "975:19:1",
																			"nodeType": "YulIdentifier",
																			"src": "975:19:1"
																		},
																		"nativeSrc": "975:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "975:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "965:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "965:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1047:117:1",
															"nodeType": "YulBlock",
															"src": "1047:117:1",
															"statements": [
																{
																	"nativeSrc": "1062:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1062:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1076:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1076:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1066:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1066:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1092:62:1",
																	"nodeType": "YulAssignment",
																	"src": "1092:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1126:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1126:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1137:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1137:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1122:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1122:3:1"
																				},
																				"nativeSrc": "1122:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1122:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1146:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1146:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nativeSrc": "1102:19:1",
																			"nodeType": "YulIdentifier",
																			"src": "1102:19:1"
																		},
																		"nativeSrc": "1102:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1102:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1092:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1092:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1174:117:1",
															"nodeType": "YulBlock",
															"src": "1174:117:1",
															"statements": [
																{
																	"nativeSrc": "1189:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1189:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1203:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1203:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1193:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1193:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1219:62:1",
																	"nodeType": "YulAssignment",
																	"src": "1219:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1253:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1253:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1264:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1264:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1249:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1249:3:1"
																				},
																				"nativeSrc": "1249:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1249:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1273:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1273:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nativeSrc": "1229:19:1",
																			"nodeType": "YulIdentifier",
																			"src": "1229:19:1"
																		},
																		"nativeSrc": "1229:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1229:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1219:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1219:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256t_int256t_int256",
												"nativeSrc": "685:613:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "736:9:1",
														"nodeType": "YulTypedName",
														"src": "736:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "747:7:1",
														"nodeType": "YulTypedName",
														"src": "747:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "759:6:1",
														"nodeType": "YulTypedName",
														"src": "759:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "767:6:1",
														"nodeType": "YulTypedName",
														"src": "767:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "775:6:1",
														"nodeType": "YulTypedName",
														"src": "775:6:1",
														"type": ""
													}
												],
												"src": "685:613:1"
											},
											{
												"body": {
													"nativeSrc": "1346:48:1",
													"nodeType": "YulBlock",
													"src": "1346:48:1",
													"statements": [
														{
															"nativeSrc": "1356:32:1",
															"nodeType": "YulAssignment",
															"src": "1356:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1381:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1381:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1374:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1374:6:1"
																		},
																		"nativeSrc": "1374:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1374:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1367:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1367:6:1"
																},
																"nativeSrc": "1367:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1367:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1356:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1356:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1304:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1328:5:1",
														"nodeType": "YulTypedName",
														"src": "1328:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1338:7:1",
														"nodeType": "YulTypedName",
														"src": "1338:7:1",
														"type": ""
													}
												],
												"src": "1304:90:1"
											},
											{
												"body": {
													"nativeSrc": "1459:50:1",
													"nodeType": "YulBlock",
													"src": "1459:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1476:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1476:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1496:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1496:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1481:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "1481:14:1"
																		},
																		"nativeSrc": "1481:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1481:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1469:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:1"
																},
																"nativeSrc": "1469:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1469:34:1"
															},
															"nativeSrc": "1469:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1469:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1400:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1447:5:1",
														"nodeType": "YulTypedName",
														"src": "1447:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1454:3:1",
														"nodeType": "YulTypedName",
														"src": "1454:3:1",
														"type": ""
													}
												],
												"src": "1400:109:1"
											},
											{
												"body": {
													"nativeSrc": "1607:118:1",
													"nodeType": "YulBlock",
													"src": "1607:118:1",
													"statements": [
														{
															"nativeSrc": "1617:26:1",
															"nodeType": "YulAssignment",
															"src": "1617:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1629:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1629:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1640:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1625:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1625:3:1"
																},
																"nativeSrc": "1625:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1625:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1617:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1617:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1691:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1691:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1704:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1704:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1715:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1715:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1700:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1700:3:1"
																		},
																		"nativeSrc": "1700:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1700:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1653:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1653:37:1"
																},
																"nativeSrc": "1653:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1653:65:1"
															},
															"nativeSrc": "1653:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1653:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1515:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1579:9:1",
														"nodeType": "YulTypedName",
														"src": "1579:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1591:6:1",
														"nodeType": "YulTypedName",
														"src": "1591:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1602:4:1",
														"nodeType": "YulTypedName",
														"src": "1602:4:1",
														"type": ""
													}
												],
												"src": "1515:210:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_int256t_int256t_int256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c806369c3274b1461002d575b5f80fd5b610047600480360381019061004291906100d8565b61005d565b6040516100549190610142565b60405180910390f35b5f828413801561006c57508184135b1561007a576001905061009a565b818413801561008857508284125b15610096576001905061009a565b5f90505b9392505050565b5f80fd5b5f819050919050565b6100b7816100a5565b81146100c1575f80fd5b50565b5f813590506100d2816100ae565b92915050565b5f805f606084860312156100ef576100ee6100a1565b5b5f6100fc868287016100c4565b935050602061010d868287016100c4565b925050604061011e868287016100c4565b9150509250925092565b5f8115159050919050565b61013c81610128565b82525050565b5f6020820190506101555f830184610133565b9291505056fea2646970667358221220e58f9e4e97bbe9c31d997639acdfa548610a9dff8ed356fea978a427a7586fde64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69C3274B EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP3 DUP5 SGT DUP1 ISZERO PUSH2 0x6C JUMPI POP DUP2 DUP5 SGT JUMPDEST ISZERO PUSH2 0x7A JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x9A JUMP JUMPDEST DUP2 DUP5 SGT DUP1 ISZERO PUSH2 0x88 JUMPI POP DUP3 DUP5 SLT JUMPDEST ISZERO PUSH2 0x96 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x9A JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7 DUP2 PUSH2 0xA5 JUMP JUMPDEST DUP2 EQ PUSH2 0xC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD2 DUP2 PUSH2 0xAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEF JUMPI PUSH2 0xEE PUSH2 0xA1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFC DUP7 DUP3 DUP8 ADD PUSH2 0xC4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10D DUP7 DUP3 DUP8 ADD PUSH2 0xC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x11E DUP7 DUP3 DUP8 ADD PUSH2 0xC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13C DUP2 PUSH2 0x128 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x155 PUSH0 DUP4 ADD DUP5 PUSH2 0x133 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 DUP16 SWAP15 0x4E SWAP8 0xBB 0xE9 0xC3 SAR SWAP10 PUSH23 0x39ACDFA548610A9DFF8ED356FEA978A427A7586FDE6473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "301:290:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;329:259;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;397:4;422:1;418;:5;:14;;;;;431:1;427;:5;418:14;414:167;;;456:4;449:11;;;;414:167;486:1;482;:5;:14;;;;;495:1;491;:5;482:14;478:103;;;520:4;513:11;;;;478:103;564:5;557:12;;329:259;;;;;;:::o;88:117:1:-;197:1;194;187:12;334:76;370:7;399:5;388:16;;334:76;;;:::o;416:120::-;488:23;505:5;488:23;:::i;:::-;481:5;478:34;468:62;;526:1;523;516:12;468:62;416:120;:::o;542:137::-;587:5;625:6;612:20;603:29;;641:32;667:5;641:32;:::i;:::-;542:137;;;;:::o;685:613::-;759:6;767;775;824:2;812:9;803:7;799:23;795:32;792:119;;;830:79;;:::i;:::-;792:119;950:1;975:52;1019:7;1010:6;999:9;995:22;975:52;:::i;:::-;965:62;;921:116;1076:2;1102:52;1146:7;1137:6;1126:9;1122:22;1102:52;:::i;:::-;1092:62;;1047:117;1203:2;1229:52;1273:7;1264:6;1253:9;1249:22;1229:52;:::i;:::-;1219:62;;1174:117;685:613;;;;;:::o;1304:90::-;1338:7;1381:5;1374:13;1367:21;1356:32;;1304:90;;;:::o;1400:109::-;1481:21;1496:5;1481:21;:::i;:::-;1476:3;1469:34;1400:109;;:::o;1515:210::-;1602:4;1640:2;1629:9;1625:18;1617:26;;1653:65;1715:1;1704:9;1700:17;1691:6;1653:65;:::i;:::-;1515:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "80200",
								"executionCost": "127",
								"totalCost": "80327"
							},
							"external": {
								"compare(int256,int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 301,
									"end": 591,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 301,
									"end": 591,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 301,
									"end": 591,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 301,
									"end": 591,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 301,
									"end": 591,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 301,
									"end": 591,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 301,
									"end": 591,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 301,
									"end": 591,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 301,
									"end": 591,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 591,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 301,
									"end": 591,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 301,
									"end": 591,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 301,
									"end": 591,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 301,
									"end": 591,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 301,
									"end": 591,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 301,
									"end": 591,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 301,
									"end": 591,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 301,
									"end": 591,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 591,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 301,
									"end": 591,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 591,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e58f9e4e97bbe9c31d997639acdfa548610a9dff8ed356fea978a427a7586fde64736f6c634300081a0033",
									".code": [
										{
											"begin": 301,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 301,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 301,
											"end": 591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 301,
											"end": 591,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 301,
											"end": 591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 591,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 301,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 301,
											"end": 591,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 591,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 591,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 301,
											"end": 591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 301,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 301,
											"end": 591,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 301,
											"end": 591,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 301,
											"end": 591,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 591,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 301,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 301,
											"end": 591,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 301,
											"end": 591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "69C3274B"
										},
										{
											"begin": 301,
											"end": 591,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 301,
											"end": 591,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 591,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 301,
											"end": 591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 591,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 329,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 329,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 329,
											"end": 588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 329,
											"end": 588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 329,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 329,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 329,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 329,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 329,
											"end": 588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 329,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 329,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 329,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 397,
											"end": 401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 418,
											"end": 419,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 418,
											"end": 423,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 418,
											"end": 432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 418,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 418,
											"end": 432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 418,
											"end": 432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 428,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 427,
											"end": 432,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 418,
											"end": 432,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 418,
											"end": 432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 414,
											"end": 581,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 414,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 414,
											"end": 581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 456,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 449,
											"end": 460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 449,
											"end": 460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 449,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 449,
											"end": 460,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 414,
											"end": 581,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 414,
											"end": 581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 486,
											"end": 487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 482,
											"end": 483,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 482,
											"end": 487,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 482,
											"end": 496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 496,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 482,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 482,
											"end": 496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 482,
											"end": 496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 495,
											"end": 496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 491,
											"end": 492,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 491,
											"end": 496,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 482,
											"end": 496,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 482,
											"end": 496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 581,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 478,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 478,
											"end": 581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 520,
											"end": 524,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 513,
											"end": 524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 513,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 513,
											"end": 524,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 581,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 478,
											"end": 581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 564,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 557,
											"end": 569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 329,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 410,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 388,
											"end": 404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 416,
											"end": 536,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 416,
											"end": 536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 488,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 505,
											"end": 510,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 488,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 488,
											"end": 511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 488,
											"end": 511,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 488,
											"end": 511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 481,
											"end": 486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 478,
											"end": 512,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 468,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 468,
											"end": 530,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 516,
											"end": 528,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 468,
											"end": 530,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 468,
											"end": 530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 416,
											"end": 536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 542,
											"end": 679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 587,
											"end": 592,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 612,
											"end": 632,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 603,
											"end": 632,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 603,
											"end": 632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 667,
											"end": 672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 641,
											"end": 673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 673,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 641,
											"end": 673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1298,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 685,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 759,
											"end": 765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 773,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 775,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 826,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 812,
											"end": 821,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 803,
											"end": 810,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 799,
											"end": 822,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 795,
											"end": 827,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 792,
											"end": 911,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 792,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 792,
											"end": 911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 830,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 830,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 830,
											"end": 909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 830,
											"end": 909,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 830,
											"end": 909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 792,
											"end": 911,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 792,
											"end": 911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 950,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1008,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 975,
											"end": 1027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1027,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 975,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1027,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 921,
											"end": 1037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1078,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1102,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1146,
											"end": 1153,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1135,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1102,
											"end": 1154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1102,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1154,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1205,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1229,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1273,
											"end": 1280,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1262,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1249,
											"end": 1271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1229,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1229,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1229,
											"end": 1281,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1229,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1298,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1298,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1298,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1394,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1304,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1386,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1387,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 1388,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1509,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1400,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1496,
											"end": 1501,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1481,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1481,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1725,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1515,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1642,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1629,
											"end": 1638,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1715,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1713,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1717,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1691,
											"end": 1697,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1653,
											"end": 1718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1718,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1653,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1725,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1725,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"compare(int256,int256,int256)": "69c3274b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"a\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"b\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"c\",\"type\":\"int256\"}],\"name\":\"compare\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":\"Comparition\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\":{\"keccak256\":\"0x7ed8a573d88a23728ebd114f1c0f2bda77f0ee36fcc1e243e67c66c153356181\",\"urls\":[\"bzz-raw://3fa0f7f7f3857d24b3f533b06fe93999b04eae69ac9f527e52d15c730c8d06d7\",\"dweb:/ipfs/QmS1LD2tZMvTF5wBs9zNoyoiJV3nyp7vDfu3aoDHNrJwYC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol": {
				"ast": {
					"absolutePath": "contracts/Blockchain_Assignment_3/Task_Codes/as3_task3.sol",
					"exportedSymbols": {
						"Comparition": [
							39
						]
					},
					"id": 40,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "273:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Comparition",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "Comparition",
							"nameLocation": "310:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "403:185:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 12,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "418:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 13,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "422:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "418:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 15,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "427:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 16,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "431:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "427:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "418:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 22,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "482:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 23,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "486:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "482:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 25,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "491:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 26,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "495:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "491:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "482:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 34,
														"nodeType": "Block",
														"src": "542:39:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "66616c7365",
																	"id": 32,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "564:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"functionReturnParameters": 11,
																"id": 33,
																"nodeType": "Return",
																"src": "557:12:0"
															}
														]
													},
													"id": 35,
													"nodeType": "IfStatement",
													"src": "478:103:0",
													"trueBody": {
														"id": 31,
														"nodeType": "Block",
														"src": "498:38:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "74727565",
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "520:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"functionReturnParameters": 11,
																"id": 30,
																"nodeType": "Return",
																"src": "513:11:0"
															}
														]
													}
												},
												"id": 36,
												"nodeType": "IfStatement",
												"src": "414:167:0",
												"trueBody": {
													"id": 21,
													"nodeType": "Block",
													"src": "434:38:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "456:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 11,
															"id": 20,
															"nodeType": "Return",
															"src": "449:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "69c3274b",
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compare",
									"nameLocation": "338:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "353:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "346:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "346:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "356:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "356:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "373:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "366:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 6,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "366:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:30:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "397:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "397:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "396:6:0"
									},
									"scope": 39,
									"src": "329:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 40,
							"src": "301:290:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "273:318:0"
				},
				"id": 0
			}
		}
	}
}